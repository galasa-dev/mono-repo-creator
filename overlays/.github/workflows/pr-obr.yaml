#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#
name: OBR PR Build

on:
  workflow_call:
    inputs:
      changed:
        description: 'True if this module has been changed and should be rebuilt'
        required: true
        type: string
      galasabld-artifact-id:
        description: 'The Workflow Run ID of the last workflow containing artifacts for galasabld'
        required: true
        type: string
      wrapping-artifact-id:
        description: 'The Workflow Run ID of the last workflow containing artifacts for the wrapping module'
        required: true
        type: string
      gradle-artifact-id:
        description: 'The Workflow Run ID of the last workflow containing artifacts for the gradle module'
        required: true
        type: string
      maven-artifact-id:
        description: 'The Workflow Run ID of the last workflow containing artifacts for the maven module'
        required: true
        type: string
      framework-artifact-id:
        description: 'The Workflow Run ID of the last workflow containing artifacts for the framework module'
        required: true
        type: string
      extensions-artifact-id:
        description: 'The Workflow Run ID of the last workflow containing artifacts for the extensions module'
        required: true
        type: string
      managers-artifact-id:
        description: 'The Workflow Run ID of the last workflow containing artifacts for the managers module'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  NAMESPACE: ${{ github.repository_owner }}

jobs:

  log-unchanged:
    name: OBR is unchanged
    if: ${{ inputs.changed == 'false' }}
    runs-on: ubuntu-latest

    steps:
      - name: Log this module is unchanged
        run: |
          echo "The obr module is unchanged"

  build-obr:
    name: Build OBR using galasabld image and maven
    if: ${{ inputs.changed == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'semeru'
  
      - name: Print githash
        working-directory: modules/obr
        run: |
          echo $GITHUB_SHA > ./obr.githash

      - name: Make secrets directory
        run : |
            mkdir /home/runner/work/secrets

      - name: Copy settings.xml
        env:
            MAVEN_SETTINGS_XML: ${{ secrets.MAVEN_SETTINGS_XML }}
        run : |
            echo $MAVEN_SETTINGS_XML > /home/runner/work/secrets/settings.xml
      
      - name: Copy GPG passphrase
        env:
            GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run : |
            echo $GPG_PASSPHRASE > /home/runner/work/secrets/passphrase.file
      
      - name: Copy GPG key
        env:
            GPG_KEY_BASE64: ${{ secrets.GPG_KEY }}
        run : |
            echo $GPG_KEY_BASE64 |  base64 --decode > /home/runner/work/secrets/galasa.gpg
            
      - name: Make GPG home directory and change permissions
        run: |
            mkdir /home/runner/work/gpg
            chmod '700' /home/runner/work/gpg
        
      - name: Import GPG
        run: |
            gpg --homedir /home/runner/work/gpg --pinentry-mode loopback --passphrase-file /home/runner/work/secrets/passphrase.file --import /home/runner/work/secrets/galasa.gpg
        
      - name: Copy custom settings.xml
        run: |
            cp /home/runner/work/secrets/settings.xml /home/runner/work/gpg/settings.xml

      # For any modules that were changed in this PR,
      # download their artifacts from this workflow run.

      - name: Download galasabld artifacts from this workflow
        id: download-galasabld
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: galasabld
          path: modules/artifacts/galasabld

      - name: Download wrapping artifacts from this workflow
        id: download-wrapping
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: wrapping
          path: modules/artifacts/dev/galasa

      - name: Download gradle artifacts from this workflow
        id: download-gradle
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: gradle
          path: modules/artifacts/dev/galasa

      - name: Download maven artifacts from this workflow
        id: download-maven
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: maven
          path: modules/artifacts/dev/galasa

      - name: Download framework artifacts from this workflow
        id: download-framework
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: framework
          path: modules/artifacts/dev/galasa

      - name: Download extensions artifacts from this workflow
        id: download-extensions
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: extensions
          path: modules/artifacts/dev/galasa

      - name: Download managers artifacts from this workflow
        id: download-managers
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: managers
          path: modules/artifacts/dev/galasa

      # For any modules that weren't changed in this PR,
      # download artifacts from the last successful workflow.

      - name: Download galasabld artifacts from last successful workflow
        if: ${{ steps.download-galasabld.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
          name: galasabld
          path: modules/artifacts/galasabld
          github-token: ${{ github.token }}
          run-id: ${{ inputs.galasabld-artifact-id }}

      - name: Download wrapping artifacts from last successful workflow
        if: ${{ steps.download-wrapping.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
            name: wrapping
            path: modules/artifacts/dev/galasa
            github-token: ${{ github.token }}
            run-id: ${{ inputs.wrapping-artifact-id }}

      - name: Download gradle artifacts from last successful workflow
        if: ${{ steps.download-gradle.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
            name: gradle
            path: modules/artifacts/dev/galasa
            github-token: ${{ github.token }}
            run-id: ${{ inputs.gradle-artifact-id }}

      - name: Download maven artifacts from last successful workflow
        if: ${{ steps.download-maven.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
            name: maven
            path: modules/artifacts/dev/galasa
            github-token: ${{ github.token }}
            run-id: ${{ inputs.maven-artifact-id }}

      - name: Download framework artifacts from last successful workflow
        if: ${{ steps.download-framework.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
            name: framework
            path: modules/artifacts/dev/galasa
            github-token: ${{ github.token }}
            run-id: ${{ inputs.framework-artifact-id }}

      - name: Download extensions artifacts from last successful workflow
        if: ${{ steps.download-extensions.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
          name: extensions
          path: modules/artifacts/dev/galasa
          github-token: ${{ github.token }}
          run-id: ${{ inputs.extensions-artifact-id }}

      - name: Download managers artifacts from last successful workflow
        if: ${{ steps.download-managers.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
            name: managers
            path: modules/artifacts/dev/galasa
            github-token: ${{ github.token }}
            run-id: ${{ inputs.managers-artifact-id }}

      - name:  Generate Galasa BOM
        if: ${{ steps.download-galasabld.outcome == 'success' }}
        run: |
          chmod +x ./modules/artifacts/galasabld/galasabld-linux-amd64
          ./modules/artifacts/galasabld/galasabld-linux-amd64 template --releaseMetadata ${{ github.workspace }}/modules/framework/release.yaml --releaseMetadata ${{ github.workspace }}/modules/extensions/release.yaml --releaseMetadata ${{ github.workspace }}/modules/managers/release.yaml --releaseMetadata ${{ github.workspace }}/modules/obr/release.yaml --template ${{ github.workspace }}/modules/obr/galasa-bom/pom.template --output ${{ github.workspace }}/modules/obr/galasa-bom/pom.xml --bom
      
      - name:  Generate Galasa BOM
        if: ${{ steps.download-galasabld.outcome == 'failure' }}
        run: |
          docker run --rm -v ${{ github.workspace }}/modules:/var/root/ ghcr.io/${{ env.NAMESPACE }}/galasabld-amd64:main template --releaseMetadata var/root/framework/release.yaml --releaseMetadata /var/root/extensions/release.yaml --releaseMetadata /var/root/managers/release.yaml --releaseMetadata /var/root/obr/release.yaml --template /var/root/obr/galasa-bom/pom.template --output /var/root/obr/galasa-bom/pom.xml --bom
          
      - name: Display Galasa BOM pom.xml
        run: |
          cat modules/obr/galasa-bom/pom.xml
        
      - name: Build Galasa BOM with maven
        working-directory: modules/obr
        run: |
          set -o pipefail
          mvn -f galasa-bom/pom.xml deploy -X \
          -Dgpg.skip=true \
          -Dgalasa.source.repo=file:${{ github.workspace }}/modules/artifacts \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          -Dgalasa.release.repo=file:${{ github.workspace }}/modules/obr/repo \
          --batch-mode --errors --fail-at-end \
          --settings /home/runner/work/gpg/settings.xml 2>&1 | tee galasa-bom-build.log
        
      - name: Upload Galasa BOM Build Log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: galasa-bom-build-log
          path: modules/obr/galasa-bom-build.log
          retention-days: 7

      - name:  Generate Galasa OBR
        if: ${{ steps.download-galasabld.outcome == 'success' }}
        run: |
          chmod +x ./modules/artifacts/galasabld/galasabld-linux-amd64
          ./modules/artifacts/galasabld/galasabld-linux-amd64 template --releaseMetadata ${{ github.workspace }}/modules/framework/release.yaml --releaseMetadata ${{ github.workspace }}/modules/extensions/release.yaml --releaseMetadata ${{ github.workspace }}/modules/managers/release.yaml --releaseMetadata ${{ github.workspace }}/modules/obr/release.yaml --template ${{ github.workspace }}/modules/obr/dev.galasa.uber.obr/pom.template --output ${{ github.workspace }}/modules/obr/dev.galasa.uber.obr/pom.xml --obr
      
      - name:  Generate Galasa OBR
        if: ${{ steps.download-galasabld.outcome == 'failure' }}
        run: |
          docker run --rm -v ${{ github.workspace }}/modules:/var/root/ ghcr.io/${{ env.NAMESPACE }}/galasabld-amd64:main template --releaseMetadata var/root/framework/release.yaml --releaseMetadata /var/root/extensions/release.yaml --releaseMetadata /var/root/managers/release.yaml --releaseMetadata /var/root/obr/release.yaml --template /var/root/obr/dev.galasa.uber.obr/pom.template --output /var/root/obr/dev.galasa.uber.obr/pom.xml --obr
          
      - name: Display Galasa OBR pom.xml
        run: |
          cat modules/obr/dev.galasa.uber.obr/pom.xml
        
      - name: Build Galasa OBR with maven
        working-directory: modules/obr
        run: |
          set -o pipefail
          mvn -f dev.galasa.uber.obr/pom.xml deploy -X \
          -Dgpg.skip=true \
          -Dgalasa.source.repo=file:${{ github.workspace }}/modules/artifacts \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          -Dgalasa.release.repo=file:${{ github.workspace }}/modules/obr/repo \
          --batch-mode --errors --fail-at-end \
          --settings /home/runner/work/gpg/settings.xml 2>&1 | tee galasa-obr-build.log

      - name: Upload Galasa OBR Build Log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: galasa-obr-build-log
          path: modules/obr/galasa-obr-build.log
          retention-days: 7

      # The obr-maven-artefacts image which is built from the release repo's directory
      # needs not only the obr module's artifacts but all other module's artifacts.
      # All other module's artifacts were placed in the source repo previously in the workflow.
      - name: Copy source repo into release repo
        run: |
          cp -R ${{ github.workspace }}/modules/artifacts/dev/galasa/* ${{ github.workspace }}/modules/obr/repo/dev/galasa

      - name: Add githashes of each module to OBR image
        run: |
          echo $(git log -1 --pretty=format:"%H" -- "modules/buildutils") > modules/obr/buildutils.githash
          echo $(git log -1 --pretty=format:"%H" -- "modules/wrapping") > modules/obr/wrapping.githash
          echo $(git log -1 --pretty=format:"%H" -- "modules/gradle") > modules/obr/gradle.githash
          echo $(git log -1 --pretty=format:"%H" -- "modules/maven") > modules/obr/maven.githash
          echo $(git log -1 --pretty=format:"%H" -- "modules/framework") > modules/obr/framework.githash
          echo $(git log -1 --pretty=format:"%H" -- "modules/extensions") > modules/obr/extensions.githash
          echo $(git log -1 --pretty=format:"%H" -- "modules/managers") > modules/obr/managers.githash
          echo $(git log -1 --pretty=format:"%H" -- "modules/obr") > modules/obr/obr.githash

      - name: Upload obr artifacts
        uses: actions/upload-artifact@v4
        with:
          name: obr
          path: modules/obr/repo
          retention-days: 7
      
      - name: Build OBR image for testing
        uses: docker/build-push-action@v5
        with:
          context: modules/obr
          file: modules/obr/dockerfiles/dockerfile.obr
          load: true
          tags: obr-maven-artefacts:test
          build-args: |
            dockerRepository=${{ env.REGISTRY }}
            tag=main

  build-obr-javadocs:
    name: Build OBR javadocs using galasabld image and maven
    if: ${{ inputs.changed == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'semeru'
      
      - name: Make secrets directory
        run : |
            mkdir /home/runner/work/secrets

      - name: Copy settings.xml 
        env:
          MAVEN_SETTINGS_XML: ${{ secrets.MAVEN_SETTINGS_XML }}
        run : |
          echo $MAVEN_SETTINGS_XML > /home/runner/work/secrets/settings.xml

      - name: Copy GPG passphrase
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run : |
          echo $GPG_PASSPHRASE > /home/runner/work/secrets/passphrase.file

      - name: Copy GPG key
        env:
          GPG_KEY_BASE64: ${{ secrets.GPG_KEY }}
        run : |
          echo $GPG_KEY_BASE64 |  base64 --decode > /home/runner/work/secrets/galasa.gpg
          
      - name: Make GPG home directory and change permissions
        run: |
          mkdir /home/runner/work/gpg
          chmod '700' /home/runner/work/gpg

      - name: Import GPG
        run: |
          gpg --homedir /home/runner/work/gpg --pinentry-mode loopback --passphrase-file /home/runner/work/secrets/passphrase.file --import /home/runner/work/secrets/galasa.gpg
      
      - name: Copy custom settings.xml
        run: |
          cp /home/runner/work/secrets/settings.xml /home/runner/work/gpg/settings.xml
          
      - name: Display Galasa Javadoc pom.xml 
        run: |
          cat modules/obr/javadocs/pom.xml

      # For any modules that were changed in this PR,
      # download their artifacts from this workflow run.

      - name: Download galasabld artifacts from this workflow
        id: download-galasabld
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: galasabld
          path: modules/artifacts/galasabld

      - name: Download wrapping artifacts from this workflow
        id: download-wrapping
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: wrapping
          path: modules/artifacts/dev/galasa

      - name: Download gradle artifacts from this workflow
        id: download-gradle
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: gradle
          path: modules/artifacts/dev/galasa

      - name: Download maven artifacts from this workflow
        id: download-maven
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: maven
          path: modules/artifacts/dev/galasa

      - name: Download framework artifacts from this workflow
        id: download-framework
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: framework
          path: modules/artifacts/dev/galasa

      - name: Download extensions artifacts from this workflow
        id: download-extensions
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: extensions
          path: modules/artifacts/dev/galasa

      - name: Download managers artifacts from this workflow
        id: download-managers
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
            name: managers
            path: modules/artifacts/dev/galasa

      # For any modules that weren't changed in this PR,
      # download artifacts from the last successful workflow.

      - name: Download galasabld artifacts from last successful workflow
        if: ${{ steps.download-galasabld.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
          name: galasabld
          path: modules/artifacts/galasabld
          github-token: ${{ github.token }}
          run-id: ${{ inputs.galasabld-artifact-id }}

      - name: Download wrapping artifacts from last successful workflow
        if: ${{ steps.download-wrapping.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
            name: wrapping
            path: modules/artifacts/dev/galasa
            github-token: ${{ github.token }}
            run-id: ${{ inputs.wrapping-artifact-id }}

      - name: Download gradle artifacts from last successful workflow
        if: ${{ steps.download-gradle.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
            name: gradle
            path: modules/artifacts/dev/galasa
            github-token: ${{ github.token }}
            run-id: ${{ inputs.gradle-artifact-id }}

      - name: Download maven artifacts from last successful workflow
        if: ${{ steps.download-maven.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
            name: maven
            path: modules/artifacts/dev/galasa
            github-token: ${{ github.token }}
            run-id: ${{ inputs.maven-artifact-id }}

      - name: Download framework artifacts from last successful workflow
        if: ${{ steps.download-framework.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
            name: framework
            path: modules/artifacts/dev/galasa
            github-token: ${{ github.token }}
            run-id: ${{ inputs.framework-artifact-id }}

      - name: Download extensions artifacts from last successful workflow
        if: ${{ steps.download-extensions.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
          name: extensions
          path: modules/artifacts/dev/galasa
          github-token: ${{ github.token }}
          run-id: ${{ inputs.extensions-artifact-id }}

      - name: Download managers artifacts from last successful workflow
        if: ${{ steps.download-managers.outcome == 'failure' }}
        uses: actions/download-artifact@v4
        with:
            name: managers
            path: modules/artifacts/dev/galasa
            github-token: ${{ github.token }}
            run-id: ${{ inputs.managers-artifact-id }}

      - name: Build Galasa Javadoc
        if: ${{ steps.download-galasabld.outcome == 'success' }}
        run: |
          chmod +x ./modules/artifacts/galasabld/galasabld-linux-amd64
          ./modules/artifacts/galasabld/galasabld-linux-amd64 template --releaseMetadata ${{ github.workspace }}/modules/framework/release.yaml --releaseMetadata ${{ github.workspace }}/modules/extensions/release.yaml --releaseMetadata ${{ github.workspace }}/modules/managers/release.yaml --releaseMetadata ${{ github.workspace }}/modules/obr/release.yaml --template ${{ github.workspace }}/modules/obr/javadocs/pom.template --output ${{ github.workspace }}/modules/obr/javadocs/pom.xml --javadoc
            
      - name: Build Galasa Javadoc
        if: ${{ steps.download-galasabld.outcome == 'failure' }}
        run: |
          docker run --rm -v ${{ github.workspace }}/modules:/var/root/ ghcr.io/${{ env.NAMESPACE }}/galasabld-amd64:main template --releaseMetadata var/root/framework/release.yaml --releaseMetadata /var/root/extensions/release.yaml --releaseMetadata /var/root/managers/release.yaml --releaseMetadata /var/root/obr/release.yaml --template /var/root/obr/javadocs/pom.template --output /var/root/obr/javadocs/pom.xml --javadoc
            
      - name: Display Galasa Javadoc pom.xml 
        run: |
          cat modules/obr/javadocs/pom.xml
        
      - name: Build javadoc site using maven
        working-directory: modules/obr/javadocs
        run: |
          set -o pipefail
          mvn -f pom.xml deploy -X \
          -Dgpg.skip=true \
          -Dgalasa.source.repo=file:${{ github.workspace }}/modules/artifacts \
          -Dgalasa.central.repo=https://repo.maven.apache.org/maven2/ \
          -Dgalasa.release.repo=file:${{ github.workspace }}/modules/obr/javadocs/docker/repo \
          -Dmaven.javadoc.failOnError=false \
          --batch-mode --errors --fail-at-end \
          --settings /home/runner/work/gpg/settings.xml 2>&1 | tee build.log

      - name: Upload javadoc site Build Log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: javadoc-site-build-log
          path: modules/obr/javadocs/build.log
          retention-days: 7
      
      - name: Build Javadoc site image for testing
        uses: docker/build-push-action@v5
        with:
          context: modules/obr
          file: modules/obr/dockerfiles/dockerfile.javadocsite
          load: true
          tags: javadoc-site:test

      - name: Build Javadoc Maven repo image for testing
        uses: docker/build-push-action@v5
        with:
          context: modules/obr
          file: modules/obr/dockerfiles/dockerfile.javadocmavenrepo
          load: true
          tags: javadoc-maven-artefacts:test
          build-args: |
            dockerRepository=${{ env.REGISTRY }}
            baseVersion=latest
